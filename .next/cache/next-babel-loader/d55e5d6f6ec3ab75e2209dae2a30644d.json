{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\frontend\\\\containers\\\\Login\\\\SignIn.js\";\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { signIn } from '../../services/auth';\nimport { updateLoading, updateLoginState } from '../../redux/actions';\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  field: {\n    width: '80%',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  button: {\n    width: '70%',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  actionFieldContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  actionField: {\n    color: 'blue',\n    marginTop: 5,\n    marginBottom: 5,\n    '&:hover': {\n      textDecoration: 'underline',\n      cursor: 'pointer'\n    }\n  },\n  errorMsg: {\n    color: 'red'\n  }\n});\n\nconst SignIn = ({\n  loading,\n  updateLoginState\n}) => {\n  const classes = useStyles();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState('');\n\n  const handleSignIn = e => {\n    if (!email.length || !password.length) return setErrorMsg('Please enter both email and password!');\n    if (loading) return;\n    updateLoading(true);\n    signIn(email, password).then(res => {\n      updateLoading(false);\n      console.log(res);\n    }).catch(err => {\n      updateLoading(false);\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.field,\n      label: \"Email*\",\n      variant: \"outlined\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.field,\n      label: \"Password*\",\n      variant: \"outlined\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSignIn,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actionFieldContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.errorMsg,\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actionField,\n        onClick: () => updateLoginState('Sign Up'),\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actionField,\n        onClick: () => updateLoginState('Forgot Password'),\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = ({\n  loading\n}) => ({\n  loading\n});\n\nconst mapDispatchToProps = {\n  updateLoading,\n  updateLoginState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/containers/Login/SignIn.js"],"names":["useState","connect","makeStyles","TextField","Button","signIn","updateLoading","updateLoginState","useStyles","root","display","flexDirection","alignItems","field","width","marginTop","marginBottom","button","actionFieldContainer","actionField","color","textDecoration","cursor","errorMsg","SignIn","loading","classes","email","setEmail","password","setPassword","setErrorMsg","handleSignIn","e","length","then","res","console","log","catch","err","target","value","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { signIn } from '../../services/auth';\r\nimport {\r\n    updateLoading,\r\n    updateLoginState,\r\n} from '../../redux/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    field: {\r\n        width: '80%',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        width: '70%',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    actionFieldContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    actionField: {\r\n        color: 'blue',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    errorMsg: {\r\n        color: 'red',\r\n    }\r\n})\r\n\r\nconst SignIn = ({\r\n    loading,\r\n    updateLoginState,\r\n}) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const handleSignIn = e => {\r\n        if (!email.length || !password.length) return setErrorMsg('Please enter both email and password!');\r\n        \r\n        if (loading) return;\r\n\r\n        updateLoading(true);\r\n        \r\n        signIn(email, password)\r\n        .then(res => {\r\n            updateLoading(false);\r\n            console.log(res)\r\n        })\r\n        .catch(err => {\r\n            updateLoading(false);\r\n            console.log(err)\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                className={classes.field}\r\n                label='Email*'\r\n                variant='outlined'\r\n                onChange={e => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n                className={classes.field}\r\n                label='Password*'\r\n                variant='outlined'\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n                className={classes.button}\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleSignIn}\r\n            >\r\n                Sign In\r\n            </Button>\r\n            <div className={classes.actionFieldContainer}>\r\n                <div className={classes.errorMsg}>\r\n                    {errorMsg}\r\n                </div>\r\n                <div \r\n                    className={classes.actionField}\r\n                    onClick={() => updateLoginState('Sign Up')}\r\n                >\r\n                    Don't have an account?\r\n                </div>\r\n                <div \r\n                    className={classes.actionField}\r\n                    onClick={() => updateLoginState('Forgot Password')}\r\n                >\r\n                    Forgot password?\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({loading}) => ({loading});\r\n\r\nconst mapDispatchToProps = {\r\n    updateLoading,\r\n    updateLoginState,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
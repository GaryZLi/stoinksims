{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from './action-types';\nvar initialState = {\n  loginState: 'Sign In',\n  loading: false,\n  uid: ''\n};\n\nvar mainReducer = function mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : JSON.parse(JSON.stringify(initialState));\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.UPDATE_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: action.loading\n      });\n\n    case types.UPDATE_LOGIN_STATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginState: action.state\n      });\n\n    case types.SIGN_IN:\n      console.log(action.uid, '<--- reducer');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uid: action.uid\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/redux/reducer.js"],"names":["types","initialState","loginState","loading","uid","mainReducer","state","JSON","parse","stringify","action","type","UPDATE_LOADING","UPDATE_LOGIN_STATE","SIGN_IN","console","log"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,SADK;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,GAAG,EAAE;AAHY,CAArB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA8D;AAAA,MAA7DC,KAA6D,uEAArDC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,YAAf,CAAX,CAAqD;AAAA,MAAXS,MAAW;;AAC9E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,KAAK,CAACY,cAAX;AACI,6CACON,KADP;AAEIH,QAAAA,OAAO,EAAEO,MAAM,CAACP;AAFpB;;AAKJ,SAAKH,KAAK,CAACa,kBAAX;AACI,6CACOP,KADP;AAEIJ,QAAAA,UAAU,EAAEQ,MAAM,CAACJ;AAFvB;;AAKJ,SAAKN,KAAK,CAACc,OAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACN,GAAnB,EAAwB,cAAxB;AACA,6CACOE,KADP;AAEIF,QAAAA,GAAG,EAAEM,MAAM,CAACN;AAFhB;;AAKJ;AACI,aAAOE,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import * as types from './action-types';\r\n\r\nconst initialState = {\r\n    loginState: 'Sign In',\r\n    loading: false,\r\n    uid: '',\r\n};\r\n\r\nconst mainReducer = (state = JSON.parse(JSON.stringify(initialState)), action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            };\r\n\r\n        case types.UPDATE_LOGIN_STATE:\r\n            return {\r\n                ...state,\r\n                loginState: action.state,\r\n            };\r\n\r\n        case types.SIGN_IN:\r\n            console.log(action.uid, '<--- reducer')\r\n            return {\r\n                ...state,\r\n                uid: action.uid,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mainReducer"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\frontend\\\\App.js\";\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from './containers/Loading';\nimport Landing from './containers/Landing';\nimport { isLoggedIn } from './services/auth';\nimport { updateUserLoginState } from './redux/actions';\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n    width: '100%',\n    minWidth: 800,\n    overflow: 'auto',\n    position: 'relative',\n    fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif'\n  }\n});\n\nconst App = ({\n  uid,\n  initialRender,\n  updateUserLoginState\n}) => {\n  const classes = useStyles();\n  useEffect(async () => {\n    await isLoggedIn().then(results => updateUserLoginState(results.data.uid)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = ({\n  initialRender,\n  uid\n}) => ({\n  initialRender,\n  uid\n});\n\nconst mapDispatchToProps = {\n  updateUserLoginState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/App.js"],"names":["useEffect","connect","makeStyles","Loading","Landing","isLoggedIn","updateUserLoginState","useStyles","root","height","width","minWidth","overflow","position","fontFamily","App","uid","initialRender","classes","then","results","data","catch","err","console","log","mapStateToProps","mapDispatchToProps"],"mappings":";;AAAA,SACIA,SADJ,QAEO,OAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,iBAArC;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,QAAQ,EAAE,GAHR;AAIFC,IAAAA,QAAQ,EAAE,MAJR;AAKFC,IAAAA,QAAQ,EAAE,UALR;AAMFC,IAAAA,UAAU,EAAE;AANV;AADmB,CAAD,CAA5B;;AAWA,MAAMC,GAAG,GAAG,CAAC;AACTC,EAAAA,GADS;AAETC,EAAAA,aAFS;AAGTX,EAAAA;AAHS,CAAD,KAIN;AACF,QAAMY,OAAO,GAAGX,SAAS,EAAzB;AAEAP,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMK,UAAU,GACfc,IADK,CACAC,OAAO,IAAId,oBAAoB,CAACc,OAAO,CAACC,IAAR,CAAaL,GAAd,CAD/B,EAELM,KAFK,CAECC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFR,CAAN;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACV,IAAxB;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKQ,GAAG,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,gBAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA1BD;;AA4BA,MAAMU,eAAe,GAAG,CAAC;AACrBT,EAAAA,aADqB;AAErBD,EAAAA;AAFqB,CAAD,MAGjB;AACHC,EAAAA,aADG;AAEHD,EAAAA;AAFG,CAHiB,CAAxB;;AAQA,MAAMW,kBAAkB,GAAG;AACvBrB,EAAAA;AADuB,CAA3B;AAIA,eAAeL,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import {\n    useEffect,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from './containers/Loading';\nimport Landing from './containers/Landing';\nimport { isLoggedIn } from './services/auth';\nimport { updateUserLoginState } from './redux/actions';\n\nconst useStyles = makeStyles({\n    root: {\n        height: '100%',\n        width: '100%',\n        minWidth: 800,\n        overflow: 'auto',\n        position: 'relative',\n        fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\n    }\n});\n\nconst App = ({\n    uid,\n    initialRender,\n    updateUserLoginState,\n}) => {\n    const classes = useStyles();\n\n    useEffect(async () => {\n        await isLoggedIn()\n        .then(results => updateUserLoginState(results.data.uid))\n        .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Loading />\n            {uid\n                ? (\n                    <div>logged in</div>\n                )\n                : (\n                    <Landing />\n                )\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = ({\n    initialRender,\n    uid,\n}) => ({\n    initialRender,\n    uid,\n});\n\nconst mapDispatchToProps = {\n    updateUserLoginState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
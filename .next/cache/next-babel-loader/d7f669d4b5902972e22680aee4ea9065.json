{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\frontend\\\\containers\\\\Login\\\\SignIn.js\";\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { updateLoginState } from '../../redux/actions';\nimport { connect } from 'react-redux';\nconst styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  field: {\n    width: '80%',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  button: {\n    width: '70%',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  actionFieldContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  actionField: {\n    color: 'blue',\n    marginTop: 5,\n    marginBottom: 5,\n    '&:hover': {\n      textDecoration: 'underline',\n      cursor: 'pointer'\n    }\n  },\n  errorMsg: {\n    color: 'red'\n  }\n};\n\nconst SignIn = ({\n  updateLoginState\n}) => {\n  // const styles.= useStyles();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState('');\n\n  const handleSignIn = e => {\n    if (!email.length || !password.length) return setErrorMsg('Please enter both email and password!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      style: styles.field,\n      label: \"Email*\",\n      variant: \"outlined\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: styles.field,\n      label: \"Password*\",\n      variant: \"outlined\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: styles.button,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSignIn,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.actionFieldContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.errorMsg,\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.actionField,\n        onClick: () => updateLoginState('Sign Up'),\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.actionField,\n        onClick: () => updateLoginState('Forgot Password'),\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapDispatchToProps = {\n  updateLoginState\n};\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/containers/Login/SignIn.js"],"names":["useState","makeStyles","TextField","Button","updateLoginState","connect","styles","root","display","flexDirection","alignItems","field","width","marginTop","marginBottom","button","actionFieldContainer","actionField","color","textDecoration","cursor","errorMsg","SignIn","email","setEmail","password","setPassword","setErrorMsg","handleSignIn","e","length","target","value","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    updateLoginState,\r\n} from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    field: {\r\n        width: '80%',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        width: '70%',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    actionFieldContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    actionField: {\r\n        color: 'blue',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    errorMsg: {\r\n        color: 'red',\r\n    }\r\n};\r\n\r\nconst SignIn = ({\r\n    updateLoginState,\r\n}) => {\r\n    // const styles.= useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const handleSignIn = e => {\r\n        if (!email.length || !password.length) return setErrorMsg('Please enter both email and password!');\r\n    };\r\n\r\n    return (\r\n        <div style={styles.root}>\r\n            <TextField\r\n                style={styles.field}\r\n                label='Email*'\r\n                variant='outlined'\r\n                onChange={e => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n                style={styles.field}\r\n                label='Password*'\r\n                variant='outlined'\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n                style={styles.button}\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleSignIn}\r\n            >\r\n                Sign In\r\n            </Button>\r\n            <div style={styles.actionFieldContainer}>\r\n                <div style={styles.errorMsg}>\r\n                    {errorMsg}\r\n                </div>\r\n                <div \r\n                    style={styles.actionField}\r\n                    onClick={() => updateLoginState('Sign Up')}\r\n                >\r\n                    Don't have an account?\r\n                </div>\r\n                <div \r\n                    style={styles.actionField}\r\n                    onClick={() => updateLoginState('Forgot Password')}\r\n                >\r\n                    Forgot password?\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateLoginState,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
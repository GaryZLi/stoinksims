{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from '../frontend/containers/Loading';\nimport Landing from '../frontend/containers/Landing';\nimport Home from '../frontend/containers/Home';\nimport { isLoggedIn } from '../frontend/services/auth';\nimport { updateUserLoginState } from '../frontend/redux/actions';\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n    width: '100%',\n    minWidth: 800,\n    overflow: 'auto',\n    position: 'relative',\n    fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif'\n  }\n});\n\nconst Main = ({\n  uid,\n  updateUserLoginState\n}) => {\n  const {\n    0: initialRender,\n    1: setInitialRender\n  } = useState(true);\n  const classes = useStyles();\n  useEffect(() => {\n    isLoggedIn().then(results => {\n      updateUserLoginState(results);\n      setInitialRender(false);\n    }).catch(err => {\n      setInitialRender(false);\n    });\n  }, []);\n  if (initialRender) return /*#__PURE__*/_jsx(_Fragment, {});\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(Loading, {}), uid ? /*#__PURE__*/_jsx(Home, {}) : /*#__PURE__*/_jsx(Landing, {})]\n  });\n}; // const Main = ({\n// }) => (\n//     <Provider store={store}>\n//         <App/>\n//     </Provider>\n// );\n\n\nconst mapStateToProps = ({\n  uid\n}) => ({\n  uid\n});\n\nconst mapDispatchToProps = {\n  updateUserLoginState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":null,"metadata":{},"sourceType":"module"}
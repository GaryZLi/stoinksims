{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([authSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/sagas/index.js"],"names":["rootSaga","all","authSaga"],"mappings":";;oDAGyBA,Q;;AAHzB,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,SAAUF,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,QAAQ,EADF,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects';\r\nimport authSaga from './auth';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        authSaga(),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
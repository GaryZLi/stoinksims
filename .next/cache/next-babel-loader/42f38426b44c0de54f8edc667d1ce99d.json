{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\pages\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport { Provider, connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from '../frontend/containers/Loading';\nimport Landing from '../frontend/containers/Landing';\nimport store from '../frontend/redux/store';\nimport Home from '../frontend/containers/Home';\nimport { isLoggedIn } from '../frontend/services/auth';\nimport { updateUserLoginState } from '../frontend/redux/actions';\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n    width: '100%',\n    minWidth: 800,\n    overflow: 'auto',\n    position: 'relative',\n    fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif'\n  }\n});\n\nconst Main = ({\n  uid,\n  updateUserLoginState\n}) => {\n  const {\n    0: initialRender,\n    1: setInitialRender\n  } = useState(true);\n  const classes = useStyles();\n  useEffect(() => {\n    isLoggedIn().then(results => {\n      updateUserLoginState(results);\n      setInitialRender(false);\n    }).catch(err => {\n      setInitialRender(false);\n    });\n  }, []);\n  if (initialRender) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}; // const Main = ({\n// }) => (\n//     <Provider store={store}>\n//         <App/>\n//     </Provider>\n// );\n\n\nconst mapStateToProps = ({\n  uid\n}) => ({\n  uid\n});\n\nconst mapDispatchToProps = {\n  updateUserLoginState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/pages/index.js"],"names":["useEffect","useState","Provider","connect","makeStyles","Loading","Landing","store","Home","isLoggedIn","updateUserLoginState","useStyles","root","height","width","minWidth","overflow","position","fontFamily","Main","uid","initialRender","setInitialRender","classes","then","results","catch","err","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,SACIA,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SACIC,QADJ,EAEIC,OAFJ,QAGO,aAHP;AAIA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAC;AACzBQ,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,QAAQ,EAAE,GAHR;AAIFC,IAAAA,QAAQ,EAAE,MAJR;AAKFC,IAAAA,QAAQ,EAAE,UALR;AAMFC,IAAAA,UAAU,EAAE;AANV;AADmB,CAAD,CAA5B;;AAWA,MAAMC,IAAI,GAAG,CAAC;AACVC,EAAAA,GADU;AAEVV,EAAAA;AAFU,CAAD,KAGP;AACF,QAAM;AAAA,OAACW,aAAD;AAAA,OAAgBC;AAAhB,MAAoCrB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMsB,OAAO,GAAGZ,SAAS,EAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,GACTe,IADD,CACMC,OAAO,IAAI;AACbf,MAAAA,oBAAoB,CAACe,OAAD,CAApB;AACAH,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAJD,EAKCI,KALD,CAKOC,GAAG,IAAI;AACVL,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAPD;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAID,aAAJ,EAAmB,oBAAO,qCAAP;AAEnB,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEd,KAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAACX;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD,C,CAyCA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMgB,eAAe,GAAG,CAAC;AACrBR,EAAAA;AADqB,CAAD,MAEjB;AACHA,EAAAA;AADG,CAFiB,CAAxB;;AAMA,MAAMS,kBAAkB,GAAG;AACvBnB,EAAAA;AADuB,CAA3B;AAIA,eAAeP,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,IAA7C,CAAf","sourcesContent":["import {\r\n    useEffect, \r\n    useState,\r\n} from 'react';\r\nimport { \r\n    Provider,\r\n    connect,\r\n} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Loading from '../frontend/containers/Loading';\r\nimport Landing from '../frontend/containers/Landing';\r\nimport store from '../frontend/redux/store';\r\nimport Home from '../frontend/containers/Home';\r\nimport { isLoggedIn } from '../frontend/services/auth';\r\nimport { updateUserLoginState } from '../frontend/redux/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100%',\r\n        width: '100%',\r\n        minWidth: 800,\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\r\n    }\r\n});\r\n\r\nconst Main = ({\r\n    uid,\r\n    updateUserLoginState,\r\n}) => {\r\n    const [initialRender, setInitialRender] = useState(true);    \r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        isLoggedIn()\r\n        .then(results => {\r\n            updateUserLoginState(results);\r\n            setInitialRender(false);\r\n        })\r\n        .catch(err => {\r\n            setInitialRender(false);\r\n        });\r\n\r\n    }, []);\r\n\r\n    if (initialRender) return <></>;\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <div className={classes.root}>\r\n                {/* <Loading />\r\n                {uid\r\n                    ? (\r\n                        <Home/>\r\n                    )\r\n                    : (\r\n                        <Landing />\r\n                    )\r\n                } */}\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n// const Main = ({\r\n\r\n// }) => (\r\n//     <Provider store={store}>\r\n//         <App/>\r\n//     </Provider>\r\n// );\r\n\r\nconst mapStateToProps = ({\r\n    uid,\r\n}) => ({\r\n    uid,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    updateUserLoginState,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}
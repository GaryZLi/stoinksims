{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\frontend\\\\App.js\";\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from './containers/Loading';\nimport Landing from './containers/Landing';\nimport Home from './containers/Home';\nimport { isLoggedIn } from './services/auth';\nimport { updateUserLoginState } from './redux/actions';\nconst useStyles = makeStyles({\n  root: {// height: '100%',\n    // width: '100%',\n    // minWidth: 800,\n    // overflow: 'auto',\n    // position: 'relative',\n    // fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\n  }\n});\n\nconst App = ({\n  uid,\n  updateUserLoginState\n}) => {\n  const {\n    0: initialRender,\n    1: setInitialRender\n  } = useState(true);\n  const classes = useStyles();\n  console.log('main');\n  useEffect(() => {\n    isLoggedIn().then(results => {\n      updateUserLoginState(results);\n      setInitialRender(false);\n    }).catch(err => {\n      setInitialRender(false);\n    });\n  }, []);\n  if (initialRender) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = ({\n  uid\n}) => ({\n  uid\n});\n\nconst mapDispatchToProps = {\n  updateUserLoginState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/App.js"],"names":["useEffect","useState","connect","makeStyles","Loading","Landing","Home","isLoggedIn","updateUserLoginState","useStyles","root","App","uid","initialRender","setInitialRender","classes","console","log","then","results","catch","err","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,SACIA,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,iBAArC;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC;AACzBO,EAAAA,IAAI,EAAE,CACF;AACA;AACA;AACA;AACA;AACA;AANE;AADmB,CAAD,CAA5B;;AAWA,MAAMC,GAAG,GAAG,CAAC;AACTC,EAAAA,GADS;AAETJ,EAAAA;AAFS,CAAD,KAGN;AACF,QAAM;AAAA,OAACK,aAAD;AAAA,OAAgBC;AAAhB,MAAoCb,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMc,OAAO,GAAGN,SAAS,EAAzB;AAEJO,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAGIjB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,GACTW,IADD,CACMC,OAAO,IAAI;AACbX,MAAAA,oBAAoB,CAACW,OAAD,CAApB;AACAL,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAJD,EAKCM,KALD,CAKOC,GAAG,IAAI;AACVP,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAPD;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAID,aAAJ,EAAmB,oBAAO,qCAAP;AAEnB,sBACI;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACL,IAAxB;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtCD;;AAwCA,MAAMY,eAAe,GAAG,CAAC;AACrBV,EAAAA;AADqB,CAAD,MAEjB;AACHA,EAAAA;AADG,CAFiB,CAAxB;;AAMA,MAAMW,kBAAkB,GAAG;AACvBf,EAAAA;AADuB,CAA3B;AAIA,eAAeN,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import {\n    useEffect, \n    useState,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from './containers/Loading';\nimport Landing from './containers/Landing';\nimport Home from './containers/Home';\nimport { isLoggedIn } from './services/auth';\nimport { updateUserLoginState } from './redux/actions';\n\nconst useStyles = makeStyles({\n    root: {\n        // height: '100%',\n        // width: '100%',\n        // minWidth: 800,\n        // overflow: 'auto',\n        // position: 'relative',\n        // fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\n    }\n});\n\nconst App = ({\n    uid,\n    updateUserLoginState,\n}) => {\n    const [initialRender, setInitialRender] = useState(true);    \n    const classes = useStyles();\n\nconsole.log('main')\n\n\n    useEffect(() => {\n        isLoggedIn()\n        .then(results => {\n            updateUserLoginState(results);\n            setInitialRender(false);\n        })\n        .catch(err => {\n            setInitialRender(false);\n        });\n\n    }, []);\n\n    if (initialRender) return <></>;\n\n    return (\n        <div className={classes.root}>\n            <Loading />\n            <Home/>\n            {/* {uid\n                ? (\n                    <Home/>\n                )\n                : (\n                    <Landing />\n                )\n            } */}\n        </div>\n    );\n};\n\nconst mapStateToProps = ({\n    uid,\n}) => ({\n    uid,\n});\n\nconst mapDispatchToProps = {\n    updateUserLoginState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
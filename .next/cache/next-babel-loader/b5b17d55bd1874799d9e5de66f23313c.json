{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\frontend\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from './containers/Loading';\nimport Landing from './containers/Landing';\nimport Home from './containers/Home';\nimport { isLoggedIn } from './services/auth';\nimport { updateUserLoginState } from './redux/actions';\nconst useStyles = makeStyles({\n  root: {// height: '100%',\n    // width: '100%',\n    // minWidth: 800,\n    // overflow: 'auto',\n    // position: 'relative',\n    // fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\n  }\n});\n\nconst App = ({\n  Component,\n  pageProps,\n  uid,\n  updateUserLoginState\n}) => {\n  const {\n    0: initialRender,\n    1: setInitialRender\n  } = useState(true);\n  const classes = useStyles();\n  useEffect(() => {\n    isLoggedIn().then(results => {\n      updateUserLoginState(results); // setInitialRender(false);\n    }).catch(err => {\n      setInitialRender(false);\n    });\n  }, []);\n  console.log('here', Component.WrappedComponent.name, uid);\n  if (initialRender) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  if (uid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    Router.push('/login');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\nconst mapStateToProps = ({\n  loading,\n  uid\n}) => ({\n  loading,\n  uid\n});\n\nconst mapDispatchToProps = {\n  updateUserLoginState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/frontend/App.js"],"names":["useEffect","useState","Router","connect","makeStyles","Loading","Landing","Home","isLoggedIn","updateUserLoginState","useStyles","root","App","Component","pageProps","uid","initialRender","setInitialRender","classes","then","results","catch","err","console","log","WrappedComponent","name","push","mapStateToProps","loading","mapDispatchToProps"],"mappings":";;;;;;;;;;AAAA,SACIA,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,iBAArC;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC;AACzBO,EAAAA,IAAI,EAAE,CACF;AACA;AACA;AACA;AACA;AACA;AANE;AADmB,CAAD,CAA5B;;AAWA,MAAMC,GAAG,GAAG,CAAC;AACTC,EAAAA,SADS;AAETC,EAAAA,SAFS;AAGTC,EAAAA,GAHS;AAITN,EAAAA;AAJS,CAAD,KAKN;AACF,QAAM;AAAA,OAACO,aAAD;AAAA,OAAgBC;AAAhB,MAAoChB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMiB,OAAO,GAAGR,SAAS,EAAzB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,GACTW,IADD,CACMC,OAAO,IAAI;AACbX,MAAAA,oBAAoB,CAACW,OAAD,CAApB,CADa,CAEb;AACH,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACVL,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAPD;AASH,GAVQ,EAUN,EAVM,CAAT;AAYAM,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBX,SAAS,CAACY,gBAAV,CAA2BC,IAA/C,EAAqDX,GAArD;AAEA,MAAIC,aAAJ,EAAmB,oBAAO,qCAAP;;AAGnB,MAAID,GAAJ,EAAS;AACL,wBACI;AAAK,MAAA,SAAS,EAAEG,OAAO,CAACP,IAAxB;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD,oBAAeG,SAAf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,MAQK;AACDZ,IAAAA,MAAM,CAACyB,IAAP,CAAY,QAAZ;AACA,wBAAO,qCAAP;AACH;AACJ,CAtCD;;AAwCA,MAAMC,eAAe,GAAG,CAAC;AACrBC,EAAAA,OADqB;AAErBd,EAAAA;AAFqB,CAAD,MAGjB;AACHc,EAAAA,OADG;AAEHd,EAAAA;AAFG,CAHiB,CAAxB;;AAQA,MAAMe,kBAAkB,GAAG;AACvBrB,EAAAA;AADuB,CAA3B;AAIA,eAAeN,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,GAA7C,CAAf","sourcesContent":["import {\n    useEffect, \n    useState,\n} from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Loading from './containers/Loading';\nimport Landing from './containers/Landing';\nimport Home from './containers/Home';\nimport { isLoggedIn } from './services/auth';\nimport { updateUserLoginState } from './redux/actions';\n\nconst useStyles = makeStyles({\n    root: {\n        // height: '100%',\n        // width: '100%',\n        // minWidth: 800,\n        // overflow: 'auto',\n        // position: 'relative',\n        // fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\n    }\n});\n\nconst App = ({\n    Component,\n    pageProps,\n    uid,\n    updateUserLoginState,\n}) => {\n    const [initialRender, setInitialRender] = useState(true);    \n    const classes = useStyles();\n\n    useEffect(() => {\n        isLoggedIn()\n        .then(results => {\n            updateUserLoginState(results);\n            // setInitialRender(false);\n        })\n        .catch(err => {\n            setInitialRender(false);\n        });\n\n    }, []);\n\n    console.log('here', Component.WrappedComponent.name, uid)\n\n    if (initialRender) return <></>;\n    \n\n    if (uid) {\n        return (        \n            <div className={classes.root}>\n                <Loading />\n                <Component {...pageProps} />\n            </div>\n        );\n    }\n    else {\n        Router.push('/login');\n        return <></>\n    }\n};\n\nconst mapStateToProps = ({\n    loading,\n    uid,\n}) => ({\n    loading,\n    uid,\n});\n\nconst mapDispatchToProps = {\n    updateUserLoginState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gxlizy\\\\Desktop\\\\javascript\\\\stoinksims\\\\pages\\\\index.js\";\n\n// import {\n//     useEffect, \n//     useState,\n// } from 'react';\n// import { connect } from 'react-redux';\n// import { makeStyles } from '@material-ui/styles';\n// import Loading from '../frontend/containers/Loading';\n// import Landing from '../frontend/containers/Landing';\n// import Home from '../frontend/containers/Home';\n// import { isLoggedIn } from '../frontend/services/auth';\n// import { updateUserLoginState } from '../frontend/redux/actions';\n// const useStyles = makeStyles({\n//     root: {\n//         height: '100%',\n//         width: '100%',\n//         minWidth: 800,\n//         overflow: 'auto',\n//         position: 'relative',\n//         fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\n//     }\n// });\n// const Main = ({\n//     uid,\n//     updateUserLoginState,\n// }) => {\n//     const [initialRender, setInitialRender] = useState(true);    \n//     const classes = useStyles();\n//     useEffect(() => {\n//         isLoggedIn()\n//         .then(results => {\n//             updateUserLoginState(results);\n//             setInitialRender(false);\n//         })\n//         .catch(err => {\n//             setInitialRender(false);\n//         });\n//     }, []);\n//     if (initialRender) return <></>;\n//     return (        \n//         <div className={classes.root}>\n//             <Loading />\n//             {uid\n//                 ? (\n//                     <Home/>\n//                 )\n//                 : (\n//                     <Landing />\n//                 )\n//             }\n//         </div>\n//     );\n// };\n// // const Main = ({\n// // }) => (\n// //     <Provider store={store}>\n// //         <App/>\n// //     </Provider>\n// // );\n// const mapStateToProps = ({\n//     uid,\n// }) => ({\n//     uid,\n// });\n// const mapDispatchToProps = {\n//     updateUserLoginState,\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Main);\nconst a = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"fuck\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 17\n}, this);\n\nexport default a;","map":{"version":3,"sources":["C:/Users/gxlizy/Desktop/javascript/stoinksims/pages/index.js"],"names":["a"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA,MAAMA,CAAC,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;;AAEA,eAAeA,CAAf","sourcesContent":["// import {\r\n//     useEffect, \r\n//     useState,\r\n// } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { makeStyles } from '@material-ui/styles';\r\n// import Loading from '../frontend/containers/Loading';\r\n// import Landing from '../frontend/containers/Landing';\r\n// import Home from '../frontend/containers/Home';\r\n// import { isLoggedIn } from '../frontend/services/auth';\r\n// import { updateUserLoginState } from '../frontend/redux/actions';\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         height: '100%',\r\n//         width: '100%',\r\n//         minWidth: 800,\r\n//         overflow: 'auto',\r\n//         position: 'relative',\r\n//         fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Fira Sans,Ubuntu,Oxygen,Oxygen Sans,Cantarell,Droid Sans,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Lucida Grande,Helvetica,Arial,sans-serif',\r\n//     }\r\n// });\r\n\r\n// const Main = ({\r\n//     uid,\r\n//     updateUserLoginState,\r\n// }) => {\r\n//     const [initialRender, setInitialRender] = useState(true);    \r\n//     const classes = useStyles();\r\n\r\n//     useEffect(() => {\r\n//         isLoggedIn()\r\n//         .then(results => {\r\n//             updateUserLoginState(results);\r\n//             setInitialRender(false);\r\n//         })\r\n//         .catch(err => {\r\n//             setInitialRender(false);\r\n//         });\r\n\r\n//     }, []);\r\n\r\n//     if (initialRender) return <></>;\r\n\r\n//     return (        \r\n//         <div className={classes.root}>\r\n//             <Loading />\r\n//             {uid\r\n//                 ? (\r\n//                     <Home/>\r\n//                 )\r\n//                 : (\r\n//                     <Landing />\r\n//                 )\r\n//             }\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\n// // const Main = ({\r\n\r\n// // }) => (\r\n// //     <Provider store={store}>\r\n// //         <App/>\r\n// //     </Provider>\r\n// // );\r\n\r\n// const mapStateToProps = ({\r\n//     uid,\r\n// }) => ({\r\n//     uid,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//     updateUserLoginState,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n\r\nconst a = () => <div>fuck</div>;\r\n\r\nexport default a;"]},"metadata":{},"sourceType":"module"}